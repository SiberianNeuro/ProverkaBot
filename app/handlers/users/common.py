import asyncio
import re

from aiogram import Router, types, F, Bot
from aiogram.exceptions import TelegramRetryAfter
from aiogram.filters import CommandStart, Command, Text, CommandObject
from aiogram.fsm.context import FSMContext
from aiogram.fsm.storage.base import StorageKey
from sqlalchemy.orm import sessionmaker

from app.keyboards.main_kb import keyboard_generator
from app.keyboards.register_kb import start_button
from app.models.doc import User

router = Router()
router.message.filter(F.chat.type == "private")


@router.message(CommandStart())
async def start(msg: types.Message, user: User, state: FSMContext, db_session, bot: Bot, config):
    await state.clear()
    await state.storage.set_state(
        bot, key=StorageKey(bot_id=bot.id, chat_id=config.misc.checking_group, user_id=msg.from_user.id),
        state=None
    )
    current_state = await state.get_state()
    if current_state and current_state.startswith('Checking'):
        await msg.answer('–°–Ω–∞—á–∞–ª–∞ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –∑–∞–∫–æ–Ω—á–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞—è–≤–∫–∏.')
        return
    await state.clear()
    if not user:
        await msg.answer('–ü—Ä–∏–≤–µ—Ç üññ\n'
                         '–Ø - –±–æ—Ç, –ø–æ–º–æ–≥–∞—é—â–∏–π —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –∫–ª–∏–µ–Ω—Ç–æ–≤.\n'
                         '–í–∏–∂—É, —á—Ç–æ —Ç—ã –µ—â–µ –Ω–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è, –¥–∞–≤–∞–π —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å!',
                         reply_markup=await start_button())
    else:
        await msg.answer(f'–ü—Ä–∏–≤–µ—Ç, {user.fullname.split()[1]} üññ\n'
                         f'–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏ –Ω–∞–ø–∏—à–∏ /help', reply_markup=await keyboard_generator(user))


@router.message(Command(commands=["cancel"]))
@router.message(Text(text="–æ—Ç–º–µ–Ω–∞", ignore_case=True))
async def cmd_cancel(msg: types.Message, state: FSMContext, user: User):
    current_state = await state.get_state()
    if current_state and current_state.startswith('Checking'):
        await msg.answer('–°–Ω–∞—á–∞–ª–∞ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –∑–∞–∫–æ–Ω—á–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞—è–≤–∫–∏.')
        return
    await state.clear()
    await msg.answer(
        text="–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.",
        reply_markup=await keyboard_generator(user)
    )


@router.message(Command(commands=["help"]))
async def command_help(msg: types.Message, user: User, config, bot: Bot):
    check_group = await bot.get_chat(config.misc.checking_group)
    if not user.is_admin and not user.is_checking:
        await msg.answer('–ß—Ç–æ —è —É–º–µ—é:\n'
                         '–ù–∞–∂–º–∏ <b>"–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞ ‚ñ∂Ô∏è"</b>, —á—Ç–æ–±—ã –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞, '
                         '–ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –ø–æ–¥ —É—Å–ª–æ–≤–∏—è, –¥–ª—è –±—É–¥—É—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏, –∞ —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∑–∞–≥—Ä—É–∑–∫–∏.\n\n'
                         '–ù–∞–∂–º–∏ <b>"–í–æ–∑–º–æ–∂–Ω—ã–µ –æ–±–∂–∞–ª–æ–≤–∞–Ω–∏—è üõë"</b>, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –æ—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤, '
                         '–ø–æ –∫–æ—Ç–æ—Ä—ã–º –º–æ–∂–Ω–æ –ø–æ–¥–∞—Ç—å –æ–±–∂–∞–ª–æ–≤–∞–Ω–∏–µ.\n\n'
                         '–ù–∞–∂–º–∏ <b>"–ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üìä"</b>, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å Excel-—Ç–∞–±–ª–∏—Ü—É —Å —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –∫–ª–∏–µ–Ω—Ç–∞–º–∏ '
                         '–∏ –∏—Ö —Ç–µ–∫—É—â–µ–π —Å–∏—Ç—É–∞—Ü–∏–µ–π –ø–æ –ø—Ä–æ–≤–µ—Ä–∫–µ.\n\n'
                         '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –≤ –¥–∞—à–±–æ—Ä–¥–µ.\n'
                         '<a href="https://datastudio.google.com/reporting/3c3ddd97-6589-4304-ad33-0cbf4e690b75">'
                         '–°—Å—ã–ª–∫–∞ –Ω–∞ –Ω–µ–≥–æ</a>.')
    if user.is_checking:
        await msg.answer(f'–î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –∑–∞–π—Ç–∏ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –≥—Ä—É–ø–ø—É, –∫—É–¥–∞ —è –æ—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞—è–≤–∫–∏.\n'
                         f'–°—Å—ã–ª–∫–∞ –Ω–∞ –≥—Ä—É–ø–ø—É - {check_group.invite_link}\n\n'
                         f'–î–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—è–≤–∫–∏ —Ç–µ–±–µ –ø—Ä–æ—Å—Ç–æ –Ω—É–∂–Ω–æ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –ø–æ–¥ –ª—é–±–æ–π –∏–∑ –Ω–∏—Ö. –ü–æ–º–Ω–∏, '
                         f'—á—Ç–æ <i>–æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É –∑–∞—è–≤–∫—É!</i>\n'
                         f'–ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∏ –ø–æ–¥ –∑–∞—è–≤–∫–æ–π –Ω–µ—Ç - –µ—ë —É–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –ª–∏–±–æ –ø—Ä–æ–≤–µ—Ä–∏–ª –∫—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–π.\n'
                         f'–ï—Å–ª–∏ –≤ –≥—Ä—É–ø–ø–æ–≤–æ–º —á–∞—Ç–µ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å –Ω–∏ –æ–¥–Ω–æ–π –∑–∞—è–≤–∫–∏, —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω—ã–µ –∑–∞—è–≤–∫–∏ '
                         f'–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É <b>"–ó–∞—è–≤–∫–∏ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É üè∑"</b>. '
                         f'–Ø –≤–µ—Ä–Ω—É —Ç–µ–±–µ 3 —Å–∞–º—ã–µ —Å—Ç–∞—Ä—ã–µ –∑–∞—è–≤–∫–∏.')

    if user.is_admin:
        await msg.answer(f'–ù–∞ —Å–∞–º–æ–º –¥–µ–ª–µ, —è –æ—á–µ–Ω—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω—ã–π, –ø–æ—ç—Ç–æ–º—É —Ç–µ–±–µ –æ—Å—Ç–∞—ë—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞–±–ª—é–¥–∞—Ç—å –∑–∞ —Ä–∞–±–æ—Ç–æ–π '
                         f'—Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å –º–æ–µ–π –ø–æ–º–æ—â—å—é üòè'
                         f'–í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –º–æ–µ–π —Ä–∞–±–æ—Ç–µ –∞–≥–≥—Ä–µ–≥–∏—Ä—É–µ—Ç—Å—è –≤ –¥–∞—à–±–æ—Ä–¥. '
                         f'–í–æ—Ç <a href="https://datastudio.google.com/reporting/343994ec-faad-4bf1-8e2e-71ee8c398ff9">'
                         f'—Å—Å—ã–ª–∫–∞</a> –Ω–∞ –Ω–µ–≥–æ.\n\n'
                         f'–ò –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –¥—É–±–ª–∏—Ä—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –≥—Ä—É–ø–ø—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ - {check_group.invite_link}')

    await msg.answer('–ö—Ä–æ–º–µ —Ç–æ–≥–æ, –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –∫–ª–∏–µ–Ω—Ç—É. '
                     '–î–ª—è —ç—Ç–æ–≥–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—É <b>"!–∏—Å—Ç–æ—Ä–∏—è"</b> –∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –≤–≤–µ—Å—Ç–∏ ID –∫–ª–∏–µ–Ω—Ç–∞.\n'
                     '<i>–ù–∞–ø—Ä–∏–º–µ—Ä, !–∏—Å—Ç–æ—Ä–∏—è 41256</i>')


@router.message(Command(commands='–∏—Å—Ç–æ—Ä–∏—è', prefix='!', ignore_case=True))
async def get_ticket_history(msg: types.Message, db_session: sessionmaker, command: CommandObject):
    if not command.args:
        await msg.answer('–ü–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ ID –∫–ª–∏–µ–Ω—Ç–∞.\n\n'
                         '<i>–ù–∞–ø—Ä–∏–º–µ—Ä, !–∏—Å—Ç–æ—Ä–∏—è 41000</i>')
    else:
        ticket_id = re.search('\d+$', command.args)
        if not ticket_id:
            await msg.answer('–ù–µ –Ω–∞—à–µ–ª ID –∫–ª–∏–µ–Ω—Ç–∞ –≤ –∫–æ–º–∞–Ω–¥–µ. –ü—Ä–æ–≤–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —á—Ç–æ–±—ã –≤—Å–µ –±—ã–ª–æ –≤–µ—Ä–Ω–æ.')
            return
        ticket_id = int(ticket_id.group(0))
        from app.utils.statistic import get_history
        client_history = await get_history(db_session, ticket_id)
        if isinstance(client_history, str):
            await msg.answer(client_history)
            return
        history_text = []
        text_string = f'<b><a href="{client_history.client.link}">{client_history.client.fullname}</a></b>\n\n'
        for num, status in enumerate(client_history.history, 1):
            new_string = f'<b>{num}. {status.name}</b>\n' \
                         f'<i>{status.created_at.strftime("%d.%m.%Y %H:%M:%S")}</i>\n\n' \
                         f'–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:\n{status.comment if status.comment else "-"}\n\n'
            if len(new_string) + len(text_string) >= 4000:
                history_text.append(text_string)
                text_string = f'<b><a href="{client_history.client.link}">{client_history.client.fullname}</a></b>\n\n'
                text_string += new_string
            else:
                text_string += new_string
        history_text.append(text_string)
        for mess in history_text:
            try:
                await msg.answer(mess)
            except TelegramRetryAfter as e:
                await asyncio.sleep(e.retry_after)
